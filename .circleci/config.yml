version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
    aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID}
jobs:
  create_infrastructure: 
    docker:
        - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID} \
             --region us-east-1 
  configure_infrastructure: 
      docker:
        - image: python:3.7-alpine3.11
      steps:
        - checkout
        - add_ssh_keys:
                # You can get this ID in the section where you registered the SSH Key
                  fingerprints: ["45:6f:24:a9:4c:a0:52:ec:7a:fb:e4:fa:a3:19:f5:97"] 
        - run:
            name: Install Ansible
            command: |
              apk add --update ansible
        - run:
            name: Configure server
            command: |
              ansible-playbook -i inventory.txt playbook.yml
  # Exercise: Smoke Testing
  smoke_test:
      docker:
        - image: amazon/aws-cli
      steps:
        - run:
            name: Test job
            # Fail the job intentionally to simulate an error.
            command:  return 1
        - destroy_environment  
  # Sequential workflow 
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      #- create_infrastructure
      - configure_infrastructure
      #- smoke_test:
      #    requires : 
      #      - create_infrastructure

